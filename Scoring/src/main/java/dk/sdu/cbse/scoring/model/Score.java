package dk.sdu.cbse.scoring.model;

import org.hibernate.annotations.CreationTimestamp;

import javax.persistence.*;
import java.time.LocalDateTime;
import java.util.Objects;

/**
 * Entity class representing a game score in the Asteroids game.
 * This class is mapped to a database table using JPA annotations.
 */
@Entity
@Table(name = "scores")
public class Score {

    /**
     * Unique identifier for the score entry.
     * Auto-generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * Name of the player who achieved this score.
     */
    @Column(nullable = false)
    private String playerName;

    /**
     * The actual score value achieved in the game.
     */
    @Column(nullable = false)
    private int scoreValue;

    /**
     * The date and time when this score was recorded.
     * Automatically set to the current time when the entity is created.
     */
    @CreationTimestamp
    @Column(nullable = false)
    private LocalDateTime gameDate;

    /**
     * Default constructor required by JPA.
     */
    public Score() {
    }

    /**
     * Constructor with required fields.
     *
     * @param playerName The name of the player
     * @param scoreValue The score value achieved
     */
    public Score(String playerName, int scoreValue) {
        this.playerName = playerName;
        this.scoreValue = scoreValue;
    }

    /**
     * Full constructor.
     *
     * @param id         The unique identifier
     * @param playerName The name of the player
     * @param scoreValue The score value achieved
     * @param gameDate   The date and time when the score was achieved
     */
    public Score(Long id, String playerName, int scoreValue, LocalDateTime gameDate) {
        this.id = id;
        this.playerName = playerName;
        this.scoreValue = scoreValue;
        this.gameDate = gameDate;
    }

    /**
     * Gets the unique identifier for this score.
     *
     * @return the score ID
     */
    public Long getId() {
        return id;
    }

    /**
     * Sets the unique identifier for this score.
     *
     * @param id the score ID
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Gets the player name.
     *
     * @return the player name
     */
    public String getPlayerName() {
        return playerName;
    }

    /**
     * Sets the player name.
     *
     * @param playerName the player name
     */
    public void setPlayerName(String playerName) {
        this.playerName = playerName;
    }

    /**
     * Gets the score value.
     *
     * @return the score value
     */
    public int getScoreValue() {
        return scoreValue;
    }

    /**
     * Sets the score value.
     *
     * @param scoreValue the score value
     */
    public void setScoreValue(int scoreValue) {
        this.scoreValue = scoreValue;
    }

    /**
     * Gets the date and time when this score was recorded.
     *
     * @return the game date
     */
    public LocalDateTime getGameDate() {
        return gameDate;
    }

    /**
     * Sets the date and time when this score was recorded.
     *
     * @param gameDate the game date
     */
    public void setGameDate(LocalDateTime gameDate) {
        this.gameDate = gameDate;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        Score score = (Score) o;
        return scoreValue == score.scoreValue &&
                Objects.equals(id, score.id) &&
                Objects.equals(playerName, score.playerName) &&
                Objects.equals(gameDate, score.gameDate);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, playerName, scoreValue, gameDate);
    }

    @Override
    public String toString() {
        return "Score{" +
                "id=" + id +
                ", playerName='" + playerName + '\'' +
                ", scoreValue=" + scoreValue +
                ", gameDate=" + gameDate +
                '}';
    }
}

